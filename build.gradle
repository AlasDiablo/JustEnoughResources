buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.7"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'

repositories {
    maven {
        name = "forge"
        url = "http://files.minecraftforge.net/maven"
    }
    maven {
        name = "jei"
        url =  "http://dvs1.progwml6.com/files/maven"
    }
    ivy {
        name = "thaumcraft"
        url = "https://dl.dropboxusercontent.com/u/47135879/"
        layout "pattern", {
            artifact "[module]-${version_minecraft}-[revision].[ext]"
        }
    }
}

dependencies {
    deobfCompile "mezz.jei:jei_${version_minecraft}:${version_jei}"
    deobfCompile name: 'thaumcraft', version: "${version_thaumcraft}", ext: 'jar'
    deobfCompile name: 'baubles', version: "${version_baubles}", ext: 'jar'
    compile fileTree(dir: 'lib', include: '*.jar')
}

group = "jeresources"
archivesBaseName = "JustEnoughResources"

sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {
    version = "${version_minecraft}-${version_forge}"
    mappings = "${version_mappings}"
    runDir = "run"

    useDepAts = true

    replace "@MAJOR@", version_major
    replace "@MINOR@", version_minor
    replace "@REVIS@", version_revis

    replaceIn "reference/Reference.java"
    replaceIn "package-info.java"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        expand 'version':"${version_major}.${version_minor}.${version_revis}", 'mcversion':version_minecraft
    }

    from(sourceSets.main.resources.srcDirs) { exclude '**/*.info' }

    // Move access transformers to META-INF
    rename '(.+_at.cfg)', 'META-INF/$1'
}

version = "${version_minecraft}-${version_major}.${version_minor}.${version_revis}"

jar {
    manifest {
        attributes 'FMLAT': 'jeresources_at.cfg'
    }
    destinationDir = file (rootProject.getRootDir().getPath() + '/output')
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    destinationDir = file (rootProject.getRootDir().getPath() + '/output')
}

task sourcesJar(type: Jar, dependsOn: 'sourceMainJava') {
    from "build/sources/main"
    from "build/resources/main"
    classifier "sources"
    destinationDir = file (rootProject.getRootDir().getPath() + '/output')
}

task apiJar(type: Jar, dependsOn: 'sourceMainJava') {
    from "build/sources/main/java/jeresources/api"
    classifier "api"
    destinationDir = file (rootProject.getRootDir().getPath() + '/output')
}

artifacts {
    archives deobfJar, sourcesJar, apiJar
}

curseforge {
    apiKey = System.getenv().CURSE_KEY == null ? '0' : System.getenv().CURSE_KEY
    project {
        id = curse_project_id
        changelog = "git log -n1 --pretty=format:\"[%h](https://github.com/${repo}/commit/%H) %cn: %s\"".execute().text.trim()
        changelogType = 'markdown'
        releaseType =  'alpha'
        mainArtifact (jar) {
            displayName = "${jar.archiveName}".replace(".jar", "")
            relations {
                requiredLibrary 'just-enough-items-jei'
            }
        }
        addArtifact (deobfJar) {
            displayName = "${deobfJar.archiveName}".replace(".jar", "")
        }
        addArtifact (sourcesJar) {
            displayName = "${sourcesJar.archiveName}".replace(".jar", "")
        }
        addArtifact (apiJar) {
            displayName = "${apiJar.archiveName}".replace(".jar", "")
        }
    }
}